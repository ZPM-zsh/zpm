#!/usr/bin/env zsh

fpath+=("${_ZPM_DIR}/functions")

if [[ "$CLICOLOR" != "0" ]]; then
  typeset -gA c=(
    reset "[0m"
    bold "[1m"

    black "[30m"
    red "[31m"
    green "[32m"
    yellow "[33m"
    blue "[34m"
    magenta "[35m"
    cyan "[36m"
    grey "[37m"
  )
fi

autoload -Uz                   \
  _ZPM_get_plugin_name         \
  _ZPM_get_plugin_type         \
  _ZPM_get_plugin_basename     \
  _ZPM_get_plugin_path         \
  _ZPM_get_plugin_link         \
  _ZPM_get_plugin_hyperlink    \
  _ZPM_log                     \
  _ZPM_get_plugin_root_git_dir

local Plugin_name=$(_ZPM_get_plugin_name "$2")
local Plugin_type=$(_ZPM_get_plugin_type "$2")
local Plugin_basename=$(_ZPM_get_plugin_basename "$Plugin_name")
local Plugin_path=$(_ZPM_get_plugin_path "$Plugin_name")
local Plugin_link=$(_ZPM_get_plugin_link "$Plugin_name" "$Plugin_type")
local Plugin_hyperlink=$(_ZPM_get_plugin_hyperlink "$Plugin_name" "$Plugin_link")
local Plugin_git_dir=$(_ZPM_get_plugin_root_git_dir "$Plugin_path" "$Plugin_type")

if [[ "$1" == "upgrade" ]]; then
  _ZPM_log zpm:upgrade "Upgrade '${2}'"
  if [[ "$Plugin_type" == "cmd" ]];then
    if [[ "$2" == *",cmd:"*  ]]; then
      eval "${${2##*,cmd:}%%\,*}" > "${Plugin_path}/${Plugin_basename}.plugin.zsh"
    fi
  else
    git --git-dir="${Plugin_git_dir}/.git/" --work-tree="${Plugin_git_dir}/" checkout "${Plugin_git_dir}/" </dev/null >/dev/null 2>/dev/null
    git --git-dir="${Plugin_git_dir}/.git/" --work-tree="${Plugin_git_dir}/" pull </dev/null >/dev/null 2>/dev/null
  fi
  local status_string="${c[green]}${c[bold]}Upgrade${c[reset]} "
  status_string+="$Plugin_hyperlink"
  status_string+=" ${c[green]}ÔêÆ${c[reset]}"

  echo $status_string
else
  if [[ "$Plugin_type" == "github" ]];then
    git clone --recursive "https://github.com/"${Plugin_name}".git" --depth 1 --single-branch "${Plugin_git_dir}" </dev/null >/dev/null 2>/dev/null
  elif [[ "$Plugin_type" == "gitlab" ]];then
    git clone --recursive "https://gitlab.com/"${Plugin_name}".git" --depth 1 --single-branch "${Plugin_git_dir}" </dev/null >/dev/null 2>/dev/null
  elif [[ "$Plugin_type" == "bitbucket" ]];then
    git clone --recursive "https://bitbucket.com/"${Plugin_name}".git" --depth 1 --single-branch "${Plugin_git_dir}" </dev/null >/dev/null 2>/dev/null
  elif [[ "$Plugin_type" == "cmd" ]];then
    if [[ "$2" == *",cmd:"*  ]]; then
      mkdir -p "${Plugin_path}"
      eval "${${2##*,cmd:}%%\,*}" >! "${Plugin_path}/${Plugin_basename}.plugin.zsh"
    fi
  elif [[ "$Plugin_type" == "omz" ]];then
    if [[ ! -e "${HOME}/.oh-my-zsh" ]]; then
      git clone --recursive "https://github.com/ohmyzsh/ohmyzsh.git" --depth 1 --single-branch "${Plugin_git_dir}" </dev/null >/dev/null 2>/dev/null
    fi
    ln -s "${HOME}/.oh-my-zsh/plugins/${Plugin_basename}" "$Plugin_path" 2>/dev/null
    true
  fi

  if [[ "$?" == "0" ]]; then
    local status_string="${c[green]}${c[bold]}Install${c[reset]} "
    status_string+="$Plugin_hyperlink"
    status_string+=" ${c[green]}ÔêÆ${c[reset]}"

    echo $status_string
  else
    local status_string="${c[red]}${c[bold]}Can't install${c[reset]} "
    status_string+="$Plugin_hyperlink"
    status_string+=" ${c[red]}${c[bold]}Ôëß${c[reset]}"
    echo $status_string
  fi
fi

if [[ "$2" == *",hook:"* && -e "$Plugin_path" ]]; then
  local status_string="${c[magenta]}${c[bold]}Run hook for${c[reset]} "
  status_string+="$Plugin_hyperlink"
  status_string+=" ${c[green]}ÔêÆ${c[reset]}"

  cd "$Plugin_path"
  eval "${${2##*,hook:}%%\,*}" >/dev/null

  echo "$status_string"
fi
